{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/body/body.component.css","webpack:///./src/app/body/body.component.html","webpack:///./src/app/body/body.component.ts","webpack:///./src/app/filter.pipe.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/mock_tarefa.ts","webpack:///./src/app/tarefa.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BodyComponent } from './body/body.component';\n\nconst routes: Routes = [\n  {path: 'todas', component:BodyComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-body></app-body>\\n\\n    \"","import { Component } from '@angular/core';\nimport { Tarefa } from './tarefa.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'To do List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BodyComponent } from './body/body.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n// Import the library\n\nimport { FilterPipe } from './filter.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BodyComponent,\n    FilterPipe\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".bor{\\r\\n    margin-bottom: 1px; \\r\\n    color: darkgrey;\\r\\n}\\r\\n\\r\\n.status{\\r\\n \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9keS9ib2R5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0NBQ25COztBQUVEOztDQUVDIiwiZmlsZSI6InNyYy9hcHAvYm9keS9ib2R5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9ye1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXB4OyBcclxuICAgIGNvbG9yOiBkYXJrZ3JleTtcclxufVxyXG5cclxuLnN0YXR1c3tcclxuIFxyXG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s12 m12\\\">\\r\\n      <h4 class=\\\"center\\\">Input List</h4>\\r\\n      <form class=\\\"col s11 m11\\\">\\r\\n        <div class=\\\"row\\\">Informe a tarefa\\r\\n          <textarea placeholder=\\\"Informar a Tarefa\\\" #todo class=\\\"materialize-textarea\\\"></textarea>\\r\\n          <label for=\\\"textarea1\\\">{{tarefaSelect?.todo}}</label>\\r\\n          <div class=\\\"col\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <button class=\\\"btn blue\\\" (click)=\\\"addtoDo(todo.value)\\\">Input</button>      \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s6 m6\\\">\\r\\n      <label>\\r\\n          <form action=\\\"#\\\" class=\\\"\\\">          \\r\\n              <label>Pesquise por Status:\\r\\n                  <input [(ngModel)]=\\\"filterargs.status\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </label>\\r\\n        </form>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class=\\\"col s6 m6 center\\\">\\r\\n      <button class=\\\"btn btn-large  red\\\">Deletar Finalizados</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s6 m6\\\">\\r\\n      <table>\\r\\n        <tr *ngFor=\\\"let tarefaSelect of Tarefas | filter:filterargs ; let selelist of to_do\\\" style=\\\"margin-bottom: 10px;\\\" [class.selected]=\\\"selelist === selectedList\\\"\\r\\n          (click)=\\\"onSelect(selelist)\\\">\\r\\n          <td >{{tarefaSelect.todo}}</td><td style=\\\"font-size: 10px; text-align:left; color:brown\\\">{{tarefaSelect.status}}</td>\\r\\n          <td><button (click)=\\\"removetoDo(tarefaSelect)\\\" class=\\\"btn btn-small red right\\\">Delete</button></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"col s6 m6\\\">\\r\\n      <div *ngIf=\\\"selectedList\\\">\\r\\n        <h2 class=\\\"center\\\">Atualize o status</h2>\\r\\n        <label>name:\\r\\n          <input [(ngModel)]=\\\"selectedList.todo\\\" placeholder=\\\"\\\">\\r\\n        </label>\\r\\n        <label>\\r\\n          <form action=\\\"#\\\" class=\\\"center\\\">\\r\\n            <p>\\r\\n              <label>Qual o status? (Pendencia/Em andamento/Finalizado/Analise)                \\r\\n                <input name=\\\"status\\\" [(ngModel)]=\\\"selectedList.status\\\" />\\r\\n                <span></span>\\r\\n              </label>\\r\\n            </p>\\r\\n          </form>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>  \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Tarefa } from '../tarefa.model';\nimport { TAREFAS } from '../mock_tarefa';\n\n// Import the library\nimport { FilterPipe } from '../filter.pipe' ;\n@Component({\n    selector: 'app-body',\n    templateUrl: './body.component.html',\n    styleUrls: ['./body.component.css']\n})\nexport class BodyComponent implements OnInit {\n    ngOnInit(): void {\n        // throw new Error(\"Method not implemented.\");\n    } \n    Tarefas: Tarefa[]\n    selectedList: Tarefa;\n    to_do = TAREFAS;\n    tarefaSelect\n    filterargs = {status: \"\"};   \n    constructor() {\n        this.Tarefas =      [\n                {todo: \"Aprender JavaScript\",status:\"Pendencia\"},\n                {todo: \"Aprender TypeScript\",status:\"Em andamento\"},\n                {todo: \"Aprender Angular\",status:\"Em andamento\"},\n                {todo: \"Aprender HTML/CSS/\",status:\"Finalizado\"},\n                {todo: \"Aprender Leitura Dinamica\",status:\"Postergado: para segundo semestre\"},\n            ]\n    }\n\n    addtoDo(todo) {\n        let tarefaSelect = new Tarefa(todo, true);\n        this.Tarefas.push(tarefaSelect);\n    }\n\n    removetoDo(Tar) {\n        let index = this.Tarefas.indexOf(Tar);\n        this.Tarefas.splice(index, 1);\n        console.log(this.Tarefas)\n    }\n    onSelect(to_do: Tarefa) {\n        this.selectedList = to_do\n    }\n    removetoDofinish(todo2): Tarefa {  \n     \n      return\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BodyComponent } from './body/body.component';\nimport { Tarefa } from './tarefa.model';\n\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})  \nexport class FilterPipe implements PipeTransform {\n  \n  transform(items: any[], filter: Tarefa): any {  \n    if (!items || !filter) {  \n        return items;  \n    }  \n    return items.filter(item => item.status.indexOf(filter.status) !== -1);  \n}  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar blue\\\">\\n  <div class=\\\"nav-wrapper\\\">    \\n    <div class=\\\"container\\\">\\n        <a href=\\\"#\\\" class=\\\"brand-logo\\\">To do List</a>\\n      <ul>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Tarefa } from './tarefa.model';\r\n\r\nexport const TAREFAS: Tarefa[] = [];","export class Tarefa {\r\n\r\n  todo: string = \"\"\r\n  status: string;\r\n  \r\n\r\n    constructor(todo, status){\r\n        this.todo = todo;\r\n        this.status = \"Em andamento\";\r\n        \r\n    }    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { FilterPipe } from '../src/app/filter.pipe'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n  "],"sourceRoot":""}